

# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 10088
  servlet:
    # 应用的访问路径
    context-path: /


# 日志配置
logging:
  level:
    cn.yubajin: debug
    org.springframework: warn

## MyBatis配置
#mybatis:
#    # 搜索指定包别名
#    typeAliasesPackage: com.ruoyi.project.**.domain
#    # 配置mapper的扫描，找到所有的mapper.xml映射文件
#    mapperLocations: classpath*:mybatis/**/*Mapper.xml
#    # 加载全局的配置文件
#    configLocation: classpath:mybatis/mybatis-config.xml

# MyBatis配置
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*Mapper.xml,classpath*:mapper/*Dao.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: cn.yubajin.multiexport
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
  global-config:
    banner: false
    #刷新mapper 调试神器
    refresh: true
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: auto
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      db-column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #序列接口实现类配置
      #key-generator: com.baomidou.springboot.xxx
      #逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
      #数据库类型
      db-type: mysql
    #自定义SQL注入器
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx

# PageHelper分页插件
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql


# 项目相关配置
ruoyi:
  # 名称
  name: RuoYi
  # 版本
  version: 2.3.0
  # 版权年份
  copyrightYear: 2019
  # 实例演示开关
  demoEnabled: true
  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）
  #  profile: D:/ruoyi/uploadPath
  # 获取ip地址开关
  addressEnabled: false

# 数据源配置
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      # 主库数据源
      master:
        url: jdbc:mysql://localhost:3306/zhgh?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8&allowMultiQueries=true&nullCatalogMeansCurrent=true&rewriteBatchedStatements=true
        username: root
        password: 123456
      # 从库数据源
      slave:
        # 从数据源开关/默认关闭
        enabled: false
        url:
        username:
        password:
      # 初始连接数
      initialSize: 40
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 100
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'
        session-stat-enable: true
        session-stat-max-count: 10
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username:
        login-password:
      filter:
        # 开启druiddatasource的状态监控
        stat:
          enabled: true
          # 开启慢sql监控，超过1s 就认为是慢sql，记录到日志中
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        # 开启防火墙
        wall:
          config:
            multi-statement-allow: true
        # 日志监控，使用slf4j 进行日志输出
        slf4j:
          enabled: true
          statement-log-error-enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false

#  redis:
#    # 地址
#    #        host: 127.0.0.1
#    host: 10.206.142.81
#    # 端口，默认为6379
#    port: 6379
#    # 密码
#    password: Whd$49&q
#    # 连接超时时间
#    timeout: 10s
#    lettuce:
#      pool:
#        # 连接池中的最小空闲连接
#        min-idle: 0
#        # 连接池中的最大空闲连接
#        max-idle: 8
#        # 连接池的最大数据库连接数
#        max-active: 8
#        # #连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-wait: -1ms


# Swagger配置
swagger:
  # 是否开启swagger
  enabled: true
  # 请求前缀
  pathMapping: /